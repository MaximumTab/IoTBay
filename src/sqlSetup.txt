PRAGMA foreign_keys = ON;

DROP TABLE IF EXISTS Users;
CREATE TABLE Users (
    user_id INTEGER PRIMARY KEY AUTOINCREMENT,
    full_name TEXT NOT NULL,
    email TEXT UNIQUE NOT NULL,
    password_hash TEXT NOT NULL,
    phone TEXT,
    user_type TEXT CHECK(user_type IN ('customer', 'staff')) NOT NULL,
    is_active INTEGER DEFAULT 1 CHECK(is_active IN (0, 1))
);

DROP TABLE IF EXISTS AccessLogs;
CREATE TABLE AccessLogs (
    log_id INTEGER PRIMARY KEY AUTOINCREMENT,
    user_id INTEGER NOT NULL,
    login_time TEXT NOT NULL,
    logout_time TEXT,
    FOREIGN KEY (user_id) REFERENCES Users(user_id) ON DELETE CASCADE
);

DROP TABLE IF EXISTS IoTDevices;
CREATE TABLE IoTDevices (
    device_id INTEGER PRIMARY KEY AUTOINCREMENT,
    device_name TEXT NOT NULL,
    device_type TEXT,
    unit_price REAL NOT NULL,
    quantity INTEGER NOT NULL,
    created_by INTEGER,
    FOREIGN KEY (created_by) REFERENCES Users(user_id)
);

DROP TABLE IF EXISTS Orders;
CREATE TABLE Orders (
    order_id INTEGER PRIMARY KEY AUTOINCREMENT,
    customer_id INTEGER NOT NULL,
    order_date TEXT DEFAULT (datetime('now')),
    status TEXT DEFAULT 'saved' CHECK(status IN ('saved', 'submitted', 'cancelled')),
    FOREIGN KEY (customer_id) REFERENCES Users(user_id)
);
DROP TABLE IF EXISTS OrderItems;
CREATE TABLE OrderItems (
    item_id INTEGER PRIMARY KEY AUTOINCREMENT,
    order_id INTEGER NOT NULL,
    device_id INTEGER NOT NULL,
    quantity INTEGER NOT NULL,
    FOREIGN KEY (order_id) REFERENCES Orders(order_id) ON DELETE CASCADE,
    FOREIGN KEY (device_id) REFERENCES IoTDevices(device_id)
);

DROP TABLE IF EXISTS Payments;
CREATE TABLE Payments (
    payment_id INTEGER PRIMARY KEY AUTOINCREMENT,
    order_id INTEGER NOT NULL,
    payment_method TEXT,
    credit_card TEXT,
    amount REAL NOT NULL,
    payment_date TEXT DEFAULT (datetime('now')),
    status TEXT DEFAULT 'saved' CHECK(status IN ('saved', 'finalized')),
    FOREIGN KEY (order_id) REFERENCES Orders(order_id) ON DELETE CASCADE
);

DROP TABLE IF EXISTS StaffDetails;
CREATE TABLE StaffDetails (
    staff_id INTEGER PRIMARY KEY,
    position TEXT,
    address TEXT,
    FOREIGN KEY (staff_id) REFERENCES Users(user_id)
);

DROP TABLE IF EXISTS Suppliers;
CREATE TABLE Suppliers (
    supplier_id INTEGER PRIMARY KEY AUTOINCREMENT,
    name TEXT NOT NULL,
    email TEXT,
    type TEXT CHECK(type IN ('company', 'individual')),
    address TEXT,
    is_active INTEGER DEFAULT 1 CHECK(is_active IN (0, 1))
);

INSERT INTO Users (full_name, email, password_hash, phone, user_type) VALUES
('Lebron James', 'king@example.com', 'hash1', '000-1111', 'customer'),
('Stephen Curry', 'curry@example.com', 'hash2', '000-2222', 'customer'),
('Kobe Bryant', 'kobe@example.com', 'hash3', '000-3333', 'customer'),
('Anthony Edward', 'ant@example.com', 'hash4', '000-4444', 'staff'),
('Austin Reeves', 'coldestwhiteboi@example.com', 'hash5', '000-5555', 'staff');
('Jimmy Butler', 'playoff@example.com', 'hash6', '000-666', 'customer'),
('Draymond Green', 'bear@example.com', 'hash7', '000-9999', 'customer'),
('Lamelo Ball', 'ye@example.com', 'hash8', '000-1122', 'customer'),
('Naz Reid', 'bet@example.com', 'hash9', '000-2233', 'staff'),
('Jaylin William', 'stylist@example.com', 'hash10', '000-3344', 'staff');
('Jalen Brunson', 'goat@example.com', 'hash11', '000-4455', 'customer'),
('Josh Hart', 'heart@example.com', 'hash12', '000-5566', 'customer'),
('Payton Pitchard', 'shooter@example.com', 'hash13', '000-6677', 'customer'),
('Luka Doncic', 'dallas@example.com', 'hash14', '000-7788', 'staff'),
('Kyrie Irving', 'shifty@example.com', 'hash15', '000-8899', 'staff');

INSERT INTO StaffDetails (staff_id, position, address) VALUES
(1, 'Sales Manager', '123 Main St'),
(2, 'Technician', '456 Oak Rd'),
(3, 'pick and Pack', '569 goat St');





